// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Context;

namespace api.Migrations
{
    [DbContext(typeof(MovieInfoContext))]
    partial class MovieInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("api.Entities.Cast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Casts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Character = "The Butcher",
                            MovieId = 1,
                            Name = "Daniel Day-Lewis"
                        },
                        new
                        {
                            Id = 2,
                            Character = "Amsterdam Vallon",
                            MovieId = 1,
                            Name = "Leonardo DiCaprio"
                        },
                        new
                        {
                            Id = 3,
                            Character = "Priest Vallon",
                            MovieId = 1,
                            Name = "Liam Neeson"
                        },
                        new
                        {
                            Id = 4,
                            Character = "Forrest Gump",
                            MovieId = 2,
                            Name = "Tom Hanks"
                        },
                        new
                        {
                            Id = 5,
                            Character = "Teniente Dan",
                            MovieId = 2,
                            Name = "Gary Sinise"
                        },
                        new
                        {
                            Id = 6,
                            Character = "Jenny curran",
                            MovieId = 2,
                            Name = "Robin Wright"
                        },
                        new
                        {
                            Id = 7,
                            Character = "Travis Bickle",
                            MovieId = 3,
                            Name = "Robert De Niro"
                        },
                        new
                        {
                            Id = 8,
                            Character = "Passenger",
                            MovieId = 3,
                            Name = "Martin scorsese"
                        },
                        new
                        {
                            Id = 9,
                            Character = "Iris",
                            MovieId = 3,
                            Name = "Jodie Foster"
                        });
                });

            modelBuilder.Entity("api.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(400);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Gangs of New York ye una película histórica del añu 2002 dirixida por Martin Scorsese",
                            Name = "Pandillas de nueva york"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Es un chico que sufre un cierto retraso mental. A pesar de todo, gracias a su tenacidad y a su buen corazón será protagonista de acontecimientos cruciales de su país",
                            Name = "Forrest Gump"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Ambientada en la Nueva York de la década de 1970, poco después de que terminara la guerra de Vietnam, se centra en la vida de Travis Bickle, un excombatiente solitario e inestable que debido a su insomnio crónico comienza a trabajar como taxista,",
                            Name = "Taxi Driver"
                        });
                });

            modelBuilder.Entity("api.Entities.Cast", b =>
                {
                    b.HasOne("api.Entities.Movie", "Movie")
                        .WithMany("Casts")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
